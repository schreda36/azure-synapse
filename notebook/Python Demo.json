{
	"name": "Python Demo",
	"properties": {
		"description": "demo",
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkDemoPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "1"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"d1774376-a4b6-43d4-95af-91e16a75a706": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"date": "2020-05-08T00:00:00.000Z",
										"countryRegionCode": "CZ",
										"normalizeHolidayName": "Den vítězství",
										"countryOrRegion": "Czech",
										"holidayName": "Den vítězství"
									},
									{
										"date": "2020-05-08T00:00:00.000Z",
										"countryRegionCode": "DK",
										"normalizeHolidayName": "Store bededag",
										"countryOrRegion": "Denmark",
										"holidayName": "Store bededag"
									},
									{
										"countryOrRegion": "England",
										"holidayName": "May Day",
										"normalizeHolidayName": "May Day",
										"date": "2020-05-08T00:00:00.000Z"
									},
									{
										"date": "2020-05-08T00:00:00.000Z",
										"countryRegionCode": "FR",
										"normalizeHolidayName": "Armistice 1945",
										"countryOrRegion": "France",
										"holidayName": "Armistice 1945"
									},
									{
										"date": "2020-05-08T00:00:00.000Z",
										"countryRegionCode": "IM",
										"normalizeHolidayName": "May Day",
										"countryOrRegion": "Isle of Man",
										"holidayName": "May Day"
									}
								],
								"schema": {
									"countryOrRegion": "string",
									"holidayName": "string",
									"normalizeHolidayName": "string",
									"isPaidTimeOff": "boolean",
									"countryRegionCode": "string",
									"date": "int"
								}
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"countryOrRegion"
									],
									"seriesFieldKeys": [
										"date"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/db352c9e-f06b-4d11-9ee0-89aea41768d4/resourceGroups/VayamPeople/providers/Microsoft.Synapse/workspaces/vayam-synapse/bigDataPools/SparkDemoPool",
				"name": "SparkDemoPool",
				"type": "Spark",
				"endpoint": "https://vayam-synapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkDemoPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# Azure Synapse Analytics Python Demo\r\n",
					"## Data source: Public Holidays Open Dataset"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from azureml.opendatasets import PublicHolidays\r\n",
					"from datetime import datetime\r\n",
					"from dateutil import parser\r\n",
					"from dateutil.relativedelta import relativedelta"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"end_date = datetime.today()\r\n",
					"start_date = end_date - relativedelta(months=12)\r\n",
					"holidays = PublicHolidays(start_date=start_date, \r\n",
					"end_date=end_date)"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"holidays_df = holidays.to_spark_dataframe()\r\n",
					"holidays_df.count()"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"holidays_df.limit(20).show()"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(holidays_df.limit(5))"
				],
				"execution_count": 8
			}
		]
	}
}